statement query T
explain select * from numbers(1) t, numbers(2) t1 where t.number = t1.number;

----
Exchange
├── exchange type: Merge
└── HashJoin
    ├── join type: INNER
    ├── build keys: [numbers.number (#1)]
    ├── probe keys: [numbers.number (#0)]
    ├── filters: []
    ├── Exchange(Build)
    │   ├── exchange type: Hash(numbers.number (#1))
    │   └── TableScan
    │       ├── table: default.system.numbers
    │       ├── read rows: 2
    │       ├── read bytes: 16
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       └── push downs: [filters: [], limit: NONE]
    └── Exchange(Probe)
        ├── exchange type: Hash(numbers.number (#0))
        └── TableScan
            ├── table: default.system.numbers
            ├── read rows: 1
            ├── read bytes: 8
            ├── partitions total: 1
            ├── partitions scanned: 1
            └── push downs: [filters: [], limit: NONE]

statement query T
explain select * from numbers(1) t, numbers(2) t1, numbers(3) t2 where t.number = t1.number and t.number = t2.number;

----
Exchange
├── exchange type: Merge
└── HashJoin
    ├── join type: INNER
    ├── build keys: [numbers.number (#2)]
    ├── probe keys: [numbers.number (#0)]
    ├── filters: []
    ├── Exchange(Build)
    │   ├── exchange type: Hash(numbers.number (#2))
    │   └── TableScan
    │       ├── table: default.system.numbers
    │       ├── read rows: 3
    │       ├── read bytes: 24
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       └── push downs: [filters: [], limit: NONE]
    └── HashJoin(Probe)
        ├── join type: INNER
        ├── build keys: [numbers.number (#1)]
        ├── probe keys: [numbers.number (#0)]
        ├── filters: []
        ├── Exchange(Build)
        │   ├── exchange type: Hash(numbers.number (#1))
        │   └── TableScan
        │       ├── table: default.system.numbers
        │       ├── read rows: 2
        │       ├── read bytes: 16
        │       ├── partitions total: 1
        │       ├── partitions scanned: 1
        │       └── push downs: [filters: [], limit: NONE]
        └── Exchange(Probe)
            ├── exchange type: Hash(numbers.number (#0))
            └── TableScan
                ├── table: default.system.numbers
                ├── read rows: 1
                ├── read bytes: 8
                ├── partitions total: 1
                ├── partitions scanned: 1
                └── push downs: [filters: [], limit: NONE]

statement query T
explain select * from (select number as a, number+1 as b from numbers(1)) t, numbers(2) t1, numbers(3) t2 where a = t1.number and b = t2.number;

----
Exchange
├── exchange type: Merge
└── HashJoin
    ├── join type: INNER
    ├── build keys: [numbers.number (#4)]
    ├── probe keys: [b (#1)]
    ├── filters: []
    ├── Exchange(Build)
    │   ├── exchange type: Hash(numbers.number (#4))
    │   └── TableScan
    │       ├── table: default.system.numbers
    │       ├── read rows: 3
    │       ├── read bytes: 24
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       └── push downs: [filters: [], limit: NONE]
    └── Exchange(Probe)
        ├── exchange type: Hash(b (#1))
        └── HashJoin
            ├── join type: INNER
            ├── build keys: [numbers.number (#3)]
            ├── probe keys: [numbers.number (#0)]
            ├── filters: []
            ├── Exchange(Build)
            │   ├── exchange type: Hash(numbers.number (#3))
            │   └── TableScan
            │       ├── table: default.system.numbers
            │       ├── read rows: 2
            │       ├── read bytes: 16
            │       ├── partitions total: 1
            │       ├── partitions scanned: 1
            │       └── push downs: [filters: [], limit: NONE]
            └── Exchange(Probe)
                ├── exchange type: Hash(numbers.number (#0))
                └── EvalScalar
                    ├── expressions: [+(numbers.number (#0), 1)]
                    └── TableScan
                        ├── table: default.system.numbers
                        ├── read rows: 1
                        ├── read bytes: 8
                        ├── partitions total: 1
                        ├── partitions scanned: 1
                        └── push downs: [filters: [], limit: NONE]

statement query T
explain select * from (select sum(number) as number from numbers(1) group by number) t, numbers(2) t1 where t.number = t1.number;

----
Exchange
├── exchange type: Merge
└── HashJoin
    ├── join type: INNER
    ├── build keys: [numbers.number (#4)]
    ├── probe keys: [number (#1)]
    ├── filters: []
    ├── Exchange(Build)
    │   ├── exchange type: Hash(numbers.number (#4))
    │   └── TableScan
    │       ├── table: default.system.numbers
    │       ├── read rows: 2
    │       ├── read bytes: 16
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       └── push downs: [filters: [], limit: NONE]
    └── Exchange(Probe)
        ├── exchange type: Hash(number (#1))
        └── Project
            ├── columns: [number (#1)]
            └── EvalScalar
                ├── expressions: [sum(number) (#3)]
                └── AggregateFinal
                    ├── group by: [number]
                    ├── aggregate functions: [sum(number)]
                    └── AggregatePartial
                        ├── group by: [number]
                        ├── aggregate functions: [sum(number)]
                        └── Exchange
                            ├── exchange type: Hash(numbers.number (#0))
                            └── TableScan
                                ├── table: default.system.numbers
                                ├── read rows: 1
                                ├── read bytes: 8
                                ├── partitions total: 1
                                ├── partitions scanned: 1
                                └── push downs: [filters: [], limit: NONE]

